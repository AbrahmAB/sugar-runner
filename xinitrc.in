#!/usr/bin/python

import os
import subprocess
import signal

from gi.repository import SugarRunner
from gi.repository import GObject

helpers_dir="@helpersdir@"

devnull = open("/dev/null")

def _write_display(display_path):
    tmp_display_path = "%s.tmp" % display_path

    with open(tmp_display_path, "w") as f:
        f.write(os.environ["DISPLAY"])

    os.rename(tmp_display_path, display_path)

def _setup_outputs():
    """Sugar doesn't handle multiple outputs properly. To avoid issues
       we keep the first output in the list returned by xrandr and turn
       off everything else.
    """
    outputs = SugarRunner.list_outputs()

    on_output = os.environ.get("SUGAR_RUNNER_OUTPUT", outputs[0])
    for output in outputs:
        if output != on_output:
            subprocess.check_call(["xrandr", "--output", output, "--off"])

def _load_xkb_config():
    if "SUGAR_RUNNER_XKBCONFIG" not in os.environ:
        return

    with open(os.environ["SUGAR_RUNNER_XKBCONFIG"]) as f:
        config = f.read()
 
    process = subprocess.Popen(["xkbcomp", "-", os.environ["DISPLAY"]],
                               stdin=subprocess.PIPE, stdout=devnull)
    process.communicate(input=config)

def _child_watch_cb(pid, condition):
    window_pid = os.environ.get("SUGAR_RUNNER_WINDOW_PID", None)
    if window_pid:
        os.kill(int(window_pid), signal.SIGTERM)

if "SUGAR_RUNNER_DISPLAY_PATH" in os.environ:
    _write_display(os.environ["SUGAR_RUNNER_DISPLAY_PATH"])

_setup_outputs()
_load_xkb_config()

args = ["dbus-launch", "--exit-with-session",
        os.path.join(helpers_dir, "run-with-keyring"),
        "sugar"]

process = subprocess.check_call(args)

GObject.child_watch_add(process.pid, _child_watch_cb)

main_loop = GObject.MainLoop()
main_loop.run()
