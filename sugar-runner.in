#!/usr/bin/python -u

import argparse
import os
import subprocess
import tempfile

helpers_dir="@helpersdir@"

def _find_free_display():
    args = [os.path.join(helpers_dir, "find-free-display")]
    return subprocess.check_output(args).strip()

def _get_screen_dpi():
    args = [os.path.join(helpers_dir, "get-screen-dpi")]
    return subprocess.check_output(args).strip()

def _write_xkb_config():
    f, name = tempfile.mkstemp(prefix="sugar-xkbconfig-")
    subprocess.check_call(["setxkbmap", "-print"], stdout=f)
    os.environ["SUGAR_RUNNER_XKBCONFIG"] = name

def _allow_to_run_x():
    with open("/etc/X11/Xwrapper.config") as f:
        if "allowed_users=anybody" in f.read():
            return

    print "We need to allow everybody to run the X server"
    tweak_wrapper = os.path.join(helpers_dir, "tweak-xwrapper")
    subprocess.check_call(["sudo", "-k", tweak_wrapper])

def _run_xephyr_window(resolution):
    args = [os.path.join(helpers_dir, "xephyr-window")]

    if resolution is not None:
        args.append(resolution)

    process = subprocess.Popen(args, stdout=subprocess.PIPE)
    return process, process.stdout.readline().strip()

def _get_tty_number():
    tty = subprocess.check_output(["tty"])
    head, tail = os.path.split(tty)
    return tail.strip().replace("tty", "")

# Setup an unencrypted keyring so that it
# doesn't bother us with password dialogs 
def _setup_keyring():
    home = os.environ.get("XDG_DATA_HOME", None)
    if home is None:
        raise RuntimeError("XDG_DATA_HOME must be defined.")

    os.makedirs(home)

    keyrings_dir = os.path.join(home, "keyrings")
    if not os.path.exists(keyrings_dir):
        os.makedirs(keyrings_dir)

        with open(os.path.join(keyrings_dir, "default"), "w") as f:
            f.write("default")

        with open(os.path.join(keyrings_dir, "default.keyring"), "w") as f:
            f.write("[keyring]\n" \
                    "display-name=default\n" \
                    "lock-on-idle=false\n" \
                    "lock-timeout=0")

parser = argparse.ArgumentParser(description="Run sugar")
parser.add_argument("--resolution", help="screen resolution")
parser.add_argument("--output", help="name of the output")
parser.add_argument("--virtual", action="store_true",
                    help="use an a virtual server")
args = parser.parse_args()

if args.output is not None:
    os.environ["SUGAR_RUNNER_OUTPUT"] = args.output

_setup_keyring()    

xinit_args = ["xinit", os.path.join(helpers_dir, "xinitrc"), "--"]
display = _find_free_display()

if args.virtual:
    xinit_args.append("/usr/bin/Xvfb")
    xinit_args.append(display)
    xinit_args.extend(["-ac", "-noreset", "-shmem",
                       "-screen", "0", "1024x768x16"])
elif "DISPLAY" in os.environ:
    _write_xkb_config()
    process, xid = _run_xephyr_window(args.resolution)

    xinit_args.append("/usr/bin/Xephyr")
    xinit_args.append(display)
    xinit_args.extend(["-dpi", _get_screen_dpi()])
    xinit_args.extend(["-parent", xid])
else:
    _allow_to_run_x()
    xinit_args.append(display)
    xinit_args.append("vt%s" % _get_tty_number())

os.execlp(xinit_args[0], *xinit_args)
